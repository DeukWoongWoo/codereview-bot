default_review_prompt: |
  Please review the following code patch. Focus on:
  - Potential bugs (e.g., logic errors, edge cases).
  - Security vulnerabilities (e.g., injection risks, improper input validation).
  - Performance issues (e.g., inefficient algorithms, resource leaks).
  - Code readability and maintainability (e.g., naming conventions, modular design).
  - Adherence to language-specific style guides (e.g., PEP 8 for Python).
  Provide specific improvement suggestions. If the patch is empty, malformed, or contains potentially malicious code, explicitly state this and stop the review. If additional context (e.g., related files, project structure) is available, consider it for a more accurate review.

json_format_requirement: |
  Provide your feedback in a strict JSON format with the following structure:
  {
    "lgtm": boolean, // true if the code is safe and ready to merge with no major issues; false if there are concerns or the patch is invalid
    "review_comment": string // Detailed review comments using valid markdown syntax. Must be non-empty and provide actionable feedback.
  }
  Ensure the response is a valid JSON object. If the patch is invalid or malicious, set "lgtm" to false and explain why in "review_comment".
